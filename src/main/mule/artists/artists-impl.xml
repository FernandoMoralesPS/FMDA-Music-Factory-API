<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<sub-flow name="impl-get-artists" doc:id="ceda9b0e-88f7-4fe7-89e8-4ba5cd687dd7">
		<logger level="INFO" doc:name="INFO START" doc:id="aaae39e7-ccf3-467c-a076-ca0490935ace" message="impl-get-artists::START" category="${log.cat}"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="430c60d8-0da2-4aff-901e-b8d126f92a35" name="sr-build-query-param-list" target="queryParamList"/>
		<set-variable value="#[attributes.queryParams.groupName]" doc:name="groupName" doc:id="b5d7022c-a376-49bd-9a80-f3ae93424fab" variableName="groupName" />
		<flow-ref doc:name="sr-select-artists" doc:id="481f5a1e-2cbc-47b9-9b36-6364867188e5" name="sr-select-artists" />
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="0a8783b0-84b7-4614-a16f-b6ad19303c7f" >
		<logger level="INFO" doc:name="INFO START" doc:id="13fcd369-6398-4350-9f0e-12ca56ed3258" message="#['sr-build-query-param-list::START::payload: ' ++ write(payload,'application/json')]"/>
		<ee:transform doc:name="queryParams" doc:id="4df735ad-6df6-4fab-8dac-4e1124a25b9d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: attributes.queryParams.firstName,
	lastName: attributes.queryParams.lastName,
	dateOfBirth: attributes.queryParams.dateOfBirth,
	groupName: attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END payload" doc:id="44ea5b96-598d-4074-8178-cabbc05ce102" message="#['sr-build-query-param-list::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="b4edf26d-bd51-40c2-844b-ec6e8c91bfc0" >
		<logger level="INFO" doc:name="INFO START" doc:id="0f585858-0b59-495e-990b-418e23a21d7d" message="#['sr-select-artists::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;   output application/java&#10;---&#10;(&quot;1=1&quot; &#10;    ++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="91da5094-e86e-4db9-b646-40482cd48b3c" variableName="whereClause"/>
		<db:select doc:name="SELECT artist" doc:id="427cc09b-1363-4c20-a8af-97a50ba5d4b6" config-ref="mysql-config">
			<db:sql><![CDATA[#["SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)"]
]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="5297197d-1069-44fb-90c7-67a4d04a11e9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	statusCode: p('http.get.status.ok'),
	message: p('http.get.message.ok'),
	searchCriteria: ("[" 
++ (if(vars.queryParamList.lastName != null) "lastName: '$(vars.queryParamList.lastName)', " else "")
++ (if(vars.queryParamList.firstName != null) "firstName: '$(vars.queryParamList.firstName)', " else "")
++ (if(vars.queryParamList.groupName != null) "groupName: '$(vars.queryParamList.groupName)', " else "")
++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(vars.queryParamList.dateOfBirth)', " else "")
    	++ "]"	),
    	
	artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID default 0,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")
	}
}
	]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="77954ac1-07e0-4d85-80d3-49b0d9525eac" >
		<logger level="INFO" doc:name="INFO START" doc:id="afcc0f7a-b1a7-4142-986b-9b6de7b0a52b" message="#['sr-find-duplicate-artist::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;  }]" doc:name="queryParamList" doc:id="4f0d36b9-4c22-498a-82b1-f18052f66fa9" variableName="queryParamList"/>
		<logger level="DEBUG" doc:name="DEBUG queryParamList" doc:id="133fa5ac-e24b-438c-9bd0-3fb8ef240848" message="#['sr-find-duplicate-artist::queryParamList' ++ write(vars.queryParamList,'application/json')]"/>
		<flow-ref doc:name="sr-select-artists" doc:id="003d1eb3-6225-49ae-8243-f346784fbb24" name="sr-select-artists"/>
		<logger level="INFO" doc:name="INFO sizeOf" doc:id="02eac7a2-ad84-4fb6-9efe-3d546b90a613" message="#['sr-find-duplicate-artist' ++ sizeOf(payload.artists)]"/>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="2848ee01-7ebf-4453-a88a-a5cf96aeb87c" >
		<logger level="INFO" doc:name="INFO size of" doc:id="218c6fa1-9725-43f1-9dbd-e439f2aebf68" message="#['impl-add-artists::START::sizeOf payload: '  ++ sizeOf(payload.artists)]"/>
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="c89a1e4b-bbbc-4050-bf3a-9451b365c30a" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[%dw 2.0
output application/json
---
[
	
]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[%dw 2.0
output application/json
---
[
	
]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[%dw 2.0
output application/json
---
payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Artist" doc:id="b0d9d5d9-ce0d-4a68-8427-dba74e1952fe" collection="#[vars.artists]">
			<logger level="INFO" doc:name="payload" doc:id="df245114-2feb-4863-995e-92c7fa52d505" message="#['impl-add-artists::ForEach::payload: ' ++ write(payload,'application/json')]"/>
			<set-payload value='#[output application/json&#10;---&#10;{&#10;	artist: {&#10;		artistId: payload.artistId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth,&#10;		dateOfDeath: payload.dateOfDeath&#10;	}&#10;}]' doc:name="artist" doc:id="96a28011-5b11-4a74-bd67-7a092c9b2c62" />
			<logger level="DEBUG" doc:name="artist" doc:id="a953eb25-1cb7-4d80-b63f-4ec23b9189c8" message="#['impl-add-artists::ForEach::artist: ' ++ write(payload, 'application/json')]"/>
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="e82632c0-4369-41da-923e-f67a3b327740" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<choice doc:name="Artist Found?" doc:id="36c652be-ac45-45f6-b67b-ff393ff05e3b" >
				<when expression="#[vars.getArtistResponse.artists[0]==null]">
					<flow-ref doc:name="sr-insert-artist" doc:id="80bb0234-af08-4461-b461-c5b9a0ef91da" name="sr-insert-artist" target="newArtist" />
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="a0704c96-7f58-437e-9555-4c31600acab3" variableName="artistsOut" />
					<logger level="INFO" doc:name="artistsOut" doc:id="e1720e31-c517-4dd1-b9f6-87b9d88428c3" message="#['impl-add-artists::ForEach::Choice::artistsOut: ' ++ write(payload,'application/json')]"/>
				</when>
				<otherwise >
					<set-variable value='#[%dw 2.0&#10;output application/json&#10;var artist = vars.artist&#10;---&#10;{&#10;	artistId: vars.getArtistResponse.artist[0].artistId,&#10;	groupName: artist.groupName as String,&#10;	lastName: artist.lastName as String,&#10;	firstName: artist.firstName as String,&#10;	m: artist.mi default ""&#10;}]' doc:name="Update artist" doc:id="172ab88a-0f22-4689-a197-ddeaf1380227" variableName="Update artist"/>
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsFound + vars.newArtist]" doc:name="artistsFound" doc:id="9d9bbe0a-5a27-44f3-8d5e-79123d332d08" variableName="artistsFound"/>
				</otherwise>
			</choice>
		</foreach>
		<ee:transform doc:name="add response" doc:id="d98594b5-f2d1-4fe4-9788-1c35b03727d8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
"statusCode": if (sizeOf(vars.artistsFound) > 0) p('http.add.status.partial') else p('http.add.status.ok'),
"message":  if (sizeOf(vars.artistsFound) > 0) p('http.add.message.partial') else p('http.add.message.ok'),
    	results: {
		addedCounts: if (vars.artistsOut[0]==null) "0" else sizeOf(vars.artistsOut), 
		addedArtists: if (vars.artistsOut[0]==null) "[]" else vars.artistsOut, 
	duplicatedCounts: if (vars.artistsFound[0]==null) "0" else sizeOf(vars.artistsFound), 
		duplicatedArtists: if (vars.artistsFound[0]==null) "[]" else vars.artistsFound, 
	}
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-insert-artist" doc:id="4fb4e5b7-b343-4db4-8cbe-4a17f46752c7" >
		<logger level="INFO" doc:name="INFO START payload" doc:id="4c47e2ea-3def-4e46-ad08-5a253af22bdd" message="#['sr-insert-artist::START::artist: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[payload.artist]" doc:name="incomingArtist" doc:id="c0adcf5f-8a4a-47c7-88d6-4931f78020a3" variableName="incomingArtist"/>
		<try doc:name="Try" doc:id="a160a387-c5f2-42ed-8163-39aa1e207897" >
			<db:insert doc:name="Insert Artist" doc:id="03149d3d-7287-49fc-b187-708f6d55dfb6" config-ref="mysql-config">
			<db:sql><![CDATA[INSERT INTO BC_MUSIC_FACTORY.BC_ARTIST 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'FMDA')
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
			<db:select doc:name="Select Insert" doc:id="8ed70485-07ae-4997-ae9e-3d1068a4f622" config-ref="mysql-config" target="newArtistId">
			<db:sql><![CDATA[SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.BC_ARTIST
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
			<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update Payload" doc:id="389931d1-74dc-431f-85b9-a2092de40866" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="15c1f29d-355e-420f-8e67-db92cac349f8" type="DB:QUERY_EXECUTION">
					<logger level="ERROR" doc:name="ERROR" doc:id="751b867b-ba4e-4998-a7e4-501f5cf32bde" message="#['sr-insert-artist::OnErrorPropagate::payload: ' ++ write(payload,'application/json')]"/>
				</on-error-propagate>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f11b7a53-d69a-4f64-bb73-fb0b6cf07cc5" type="EXPRESSION">
					<logger level="ERROR" doc:name="ERROR" doc:id="2f53bf27-651a-4f94-85a2-ae39bd2caec9" message="#['sr-insert-artist::OnErrorContinue::payload: ' ++ write(payload,'application/json')]"/>
				</on-error-continue>
			</error-handler>
		</try>
		<logger level="INFO" doc:name="INF END payload" doc:id="19597acd-4f6e-49f8-8ca1-35f531c2e306" message="#['sr-insert-artist::END:payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="769f7f8a-ce05-44bf-a494-379fe51b04de" >
		<logger level="INFO" doc:name="INFO START" doc:id="0030a892-acbd-4602-bda4-b1b1e2d60ae2" message="#['impl-update-artist-urls::START::payload:'  ++ write(payload, 'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;	method: p('last.fm.method'),&#10;	apiKey: p('last.fm.api.key'),&#10;	format: p('last.fm.format'),&#10;	artist: payload.groupName&#10;}]" doc:name="lastFmProperties" doc:id="40f26a05-c4e2-4a13-ad4f-3f22aa809438" variableName="lastFmProperties"/>
		<flow-ref doc:name="sr-get-artist-info" doc:id="195fcf83-343c-448d-ac91-f6e6d9fecc71" name="sr-get-artist-info" target="lastFmResponse"/>
		<choice doc:name="Artist Found?" doc:id="995a7ee6-7084-42c7-bafc-284955456e2d" >
			<when expression='#[vars.lastFmResponse.statusCode=="201"]'>
				<logger level="INFO" doc:name="Placeholder" doc:id="cfaffcf3-408b-40c6-8546-20e6fa65cceb" message="#['impl-update-artists-urls::Choice::Placehoder::payload: ' ++ write(payload, 'application/json')]"/>
				<flow-ref doc:name="sr-patch-artist" doc:id="eafc420b-9379-48a9-b719-d180fd3ab4df" name="sr-patch-artist"/>
			</when>
			<otherwise >
				<ee:transform doc:name="NOT FOUND response" doc:id="94c76ce9-0f4b-40a4-91ee-adf775eb3d2b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.lastFmResponse
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="INFO final response" doc:id="948e69c3-139b-40eb-bbe7-a0e7c74aec00" message="#['impl-update-artists-urls::FinalResponse::payload: ' ++ write(payload, 'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-get-artist-info" doc:id="e7aa2df5-a4b2-40fb-8cff-29bea9999c6b" >
		<logger level="INFO" doc:name="INFO START lastFmProperties" doc:id="e5a592fb-af03-48b1-b0cd-573da28b5f66" message="#['sr-get-artist-info::START::payload: ' ++ write(payload, 'application/json')]"/>
		<http:request method="GET" doc:name="Get Artist Info" doc:id="3456befa-90cf-4b09-ba27-e4cc13eb7ecf" config-ref="last-fm-http-config" path="/${last.fm.version}">
			<http:query-params><![CDATA[#[{
	"method": vars.lastFmProperties.method,
	"api_key": vars.lastFmProperties.apiKey,
	"artist": vars.lastFmProperties.artist,
	"format": vars.lastFmProperties.format
}]]]></http:query-params>
		</http:request>
		<logger level="DEBUG" doc:name="DEBUG Get response" doc:id="fdfe296a-7513-44c6-b115-27454ec3694c" message="#['impl-update-artists-urls::DEBUG:payload: ' ++ write(payload,'application/json')]" />
		<ee:transform doc:name="payload" doc:id="b88222cb-d0fb-4895-9fa9-ecd526b08e19">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var NOT_FOUND_STATUS = p('http.patch.status.nf')
var NOT_FOUND_MESSAGE = p('http.patch.message.nf')
var FOUND_STATUS = p('http.patch.status.ok')
var FOUND_MESSAGE = p('http.patch.message.ok')
---
{
	statusCode: if ( payload.artist.bio.content==null ) (NOT_FOUND_STATUS) else (FOUND_STATUS),
	message: if ( payload.artist.bio.content==null ) (NOT_FOUND_MESSAGE) else (FOUND_MESSAGE),
	bioUrl: if ( payload.artist.bio.content != null ) (payload.artist.bio.links.link.href)  else (NOT_FOUND_MESSAGE)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END payload" doc:id="f56391f2-ed06-4f79-ac34-6085e6c5c716" message="#['sr-get-artist-info::END::payload: ' ++ write(payload, 'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-patch-artist" doc:id="386d5070-2c7a-4f12-ab42-713c236c1aac" >
		<logger level="INFO" doc:name="INFO START" doc:id="6208b9c7-aaeb-432c-acab-2c0a6603ee6a" message="#['sr-patch-artist::START::lastFmResponse: ' ++ write(vars.lastFmResponse,'application/json')]"/>
		<set-variable value="#[vars.lastFmResponse.bioUrl]" doc:name="bioUrl" doc:id="5f7f36ec-6893-427d-84a9-7202a6f7291f" variableName="bioUrl"/>
		<db:update doc:name="Update artist" doc:id="01218b28-4933-4dcd-b318-3f44f29de10c" config-ref="mysql-config">
			<db:sql ><![CDATA[UPDATE BC_ARTIST
  SET bio_url = :bioUrl
  WHERE group_nm = :groupName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bioUrl: vars.bioUrl,
	groupName: vars.lastFmProperties.artist
}]]]></db:input-parameters>
		</db:update>
		<logger level="DEBUG" doc:name="DEBUG payload" doc:id="5d3ae32c-1ff2-433d-a610-0089797acc22" message="#['sr-patch-artist::Update payload: ' ++ write(payload,'application/json')]"/>
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;var FOUND_STATUS = p('http.get.status.ok')&#10;var FOUND_MESSAGE = p('http.get.message.ok')&#10;---&#10;{&#10;	statusCode: FOUND_STATUS,&#10;	message: FOUND_MESSAGE,&#10;	bioUrl: vars.bioUrl,&#10;	recordsUpdated: payload.affectedRows&#10;}]" doc:name="Set Payload" doc:id="eb429fb4-3abc-400f-8854-566dd3c81645" />
		<logger level="INFO" doc:name="INFO END payload" doc:id="ede66493-45b2-42ac-9741-8f73d70ebef1" message="#['sr-patch-artist::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
</mule>
